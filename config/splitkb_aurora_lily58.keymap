/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>


/ {
    behaviors {
        // rot_kp: behavior_sensor_rotate_key_press {
        //     compatible = "zmk,behavior-sensor-rotate-var";
        //     label = "ENC_KP";
        //     #sensor-binding-cells = <2>;
        //     bindings = <&kp>, <&kp>;
        // };
        rot_rgb: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <2>;
            bindings = <&rgb_ug>, <&rgb_ug>;
        };
        
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   '   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |  VOL      L/R ARR |  H   |  J    |  K    |  L   |   ;   |   [   |
// |  CTRL |  Z  |  X  |  C   |  V   |  B   |  PLAY  |  | KBPWR |  N   |  M    |  ,    |  .   |   /   |   ]   |
//                     | MO1  | WIN  | ALT  |  SPACE |  | ENTER | MO2  | BSPC  |  WIN  |
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3 &kp N4   &kp N5                                 &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp APOS
&kp TAB   &kp Q  &kp W  &kp E  &kp R    &kp T                                  &kp Y  &kp U    &kp I     &kp O   &kp P    &kp BSLH
&kp LSHFT &kp A  &kp S  &kp D  &kp F    &kp G                                  &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp LBKT
&kp LCTRL &kp Z  &kp X  &kp C  &kp V    &kp B     &kp C_PP   &ext_power EP_TOG &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp RBKT
                        &mo 1  &kp LGUI &kp LALT  &kp SPACE  &kp RET           &mo 2  &kp BSPC &kp RGUI
            >;

            sensor-bindings = <&inc_dec_cp C_VOL_DN C_VOL_UP &inc_dec_cp LEFT RIGHT>;
        };

        control_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR |BTTGL| BT0 |  BT1 |  BT2 |  BT3 |                   |      |       |       |      |       |       |
// |       | HUE+| BRT+| SAT+ | EFF+ | SPD+ |                   |      |       |       |      |       |       |
// | SHIFT | HUE-| BRT-| SAT- | EFF- | SPD- |                   |      |       |       |      |       |       |
// | LCTRL |     |     |      |      |      | RGBTGL |  |       |      |       |       |      |       |       |
//                     |  MO1 | WIN  | ALT  | SPACE  |  | ENTER | MO2  |       |  WIN  |
            bindings = <
&bt BT_CLR &out OUT_TOG    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3                             &none     &none     &none    &none &none &none
&none      &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_EFF &rgb_ug RGB_SPI                          &none     &none     &none    &none &none &none
&kp LSHFT  &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_EFR &rgb_ug RGB_SPD                          &none     &none     &none    &none &none &none
&kp LCTRL  &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none   &none     &none     &none    &none &none &none
                                           &mo 1           &kp LGUI        &kp LALT         &kp SPACE       &kp RET &mo 2     &kp BSPC  &kp RGUI
            >;

            sensor-bindings = <&rot_rgb RGB_HUD RGB_HUI &rot_rgb RGB_BRD RGB_BRI>;
        };

        additional_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  F1 | F2  | F3   | F4   |  F5  |                   | F6   |  F7   |  F8   |  -   |   +   |  ~    |
// |  CAPS |     | UP  |      |      |      |                   | F9   |  F10  |  F11  | PGUP |  F12  |       |
// | SHIFT |LEFT |DOWN |RIGHT |      |      | NEXT/PREV  CTRLAR |      |INSERT | HOME  | PGDN |  END  |       |
// | LCTRL |     |     |      |      |      | MUTE   |  |       |      |       |       |      |       |       |
//                     |  MO1 | WIN  | ALT  | SPACE  |  | ENTER | MO2  |  DEL  |  WIN  |
            bindings = <
&kp ESC   &kp F1   &kp F2   &kp F3    &kp F4   &kp F5                         &kp F6 &kp F7   &kp F8    &kp MINUS  &kp EQUAL &kp GRAVE
&kp CAPS  &none    &kp UP   &none     &none    &none                          &kp F9 &kp F10  &kp F11   &kp PG_UP  &kp P     &none
&kp LSHFT &kp LEFT &kp DOWN &kp RIGHT &none    &none                          &none  &kp INS  &kp HOME  &kp PG_DN  &kp END   &none
&kp LCTRL &none    &none    &none     &none    &none     &kp K_MUTE &none     &none  &none    &none     &none      &none     &none
                            &mo 1     &kp LGUI &kp LALT  &kp SPACE  &kp RET   &mo 2  &kp DEL  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp K_PREV K_NEXT &inc_dec_kp RC(LEFT) RC(RIGHT)>;
        };
    };
};
